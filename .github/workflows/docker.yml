name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test Docker and network connectivity
        run: |
          echo "Testing Docker daemon..."
          docker version
          echo "Testing network connectivity to ghcr.io..."
          curl -I --connect-timeout 10 https://ghcr.io 2>/dev/null | head -n 1 || echo "Warning: Cannot reach ghcr.io directly"
          echo "Testing DNS resolution..."
          nslookup ghcr.io || echo "Warning: DNS resolution issues"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver-opts: |
            network=host

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 2
        continue-on-error: true
        id: docker_login

      - name: Retry Docker login if failed
        if: github.event_name != 'pull_request' && steps.docker_login.outcome == 'failure'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Get version
        id: version
        run: |
          VERSION=$(cat VERSION)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_time=$(date -u '+%Y-%m-%d_%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "git_commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
            BUILD_TIME=${{ steps.version.outputs.build_time }}
            GIT_COMMIT=${{ steps.version.outputs.git_commit }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate deployment artifact
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p deploy-artifacts
          cp docker-compose.yml deploy-artifacts/docker-compose.yml
          cp .env.example deploy-artifacts/
          cp config.json.example deploy-artifacts/
          cp scripts/deploy.sh deploy-artifacts/

      - name: Upload deployment artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: whatsignal-deployment
          path: deploy-artifacts/